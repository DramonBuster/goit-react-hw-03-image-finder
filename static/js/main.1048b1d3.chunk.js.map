{"version":3,"sources":["Components/Toastify/Toastify.js","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Loader/Loader.js","Components/Modal/Modal.js","Components/Button/Button.js","data/services.js","Components/ImageFinder/ImageFinder.js","App.js","reportWebVitals.js","index.js"],"names":["Toastify","type","nameToastify","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","transition","Slide","propTypes","PropTypes","string","isRequired","Header","styled","header","SearchForm","form","SearchButton","button","SearchLabel","span","SearchInput","input","Searchbar","state","searchQuery","handleChange","event","setState","target","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","this","style","width","height","autoComplete","autoFocus","placeholder","onChange","Component","GalleryListItem","li","GalleryImage","img","ImageGalleryItem","webformatURL","user","largeImageURL","src","alt","Gallery","ul","ImageGallery","images","onClick","map","image","id","LoaderWrapper","div","LoadingLoader","color","modalRoot","document","querySelector","OverlayWrapper","ButtonClose","ModalWrapper","Modal","handleKeyDown","code","onClose","handleBackdropClick","currentTarget","handleClick","window","addEventListener","removeEventListener","fullSize","name","createPortal","LoadMore","Button","fetchImages","page","a","axios","get","response","status","data","hits","Error","ImageFinderWrapper","Status","scrollToTheBottom","offsetHeight","documentElement","scrollTo","top","behavior","scrollToTheTop","ToTheTopButton","ImageFinder","showModal","handleFormSubmit","nodeName","dataset","fullsize","getLoadMore","prevState","prevProps","PENDING","RESOLVED","API","then","responseImages","length","catch","error","Loader","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1048b1d3.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Slide, toast } from 'react-toastify';\r\n\r\nconst Toastify = (type, nameToastify) =>\r\n  toast(nameToastify, {\r\n    position: 'top-center',\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    transition: Slide,\r\n    type: type,\r\n  });\r\n\r\nToastify.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n  nameToastify: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Toastify;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { ImSearch } from 'react-icons/im';\r\nimport Toastify from '../Toastify/Toastify';\r\n\r\nconst Header = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding: 12px 24px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  padding: 8px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SearchButton = styled.button`\r\n  margin-right: 10px;\r\n  padding: 0;\r\n  border: 0;\r\n  opacity: 0.6;\r\n  background-color: transparent;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  :hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst SearchLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-size: 22px;\r\n  border: none;\r\n  outline: none;\r\n`;\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    searchQuery: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      searchQuery: event.target.value.toLowerCase(),\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    const { searchQuery } = this.state;\r\n    event.preventDefault();\r\n    if (searchQuery.trim() === '') {\r\n      Toastify('warning', 'Enter the name of the picture or photo!');\r\n    } else {\r\n      this.props.onSubmit(searchQuery.trim());\r\n      this.setState({ searchQuery: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { searchQuery } = this.state;\r\n    return (\r\n      <Header>\r\n        <SearchForm onSubmit={this.handleSubmit}>\r\n          <SearchButton type=\"submit\">\r\n            <ImSearch style={{ width: 22, height: 22 }} />\r\n            <SearchLabel>Search</SearchLabel>\r\n          </SearchButton>\r\n          <SearchInput\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={searchQuery}\r\n            onChange={this.handleChange}\r\n          />\r\n        </SearchForm>\r\n      </Header>\r\n    );\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst GalleryListItem = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nconst GalleryImage = styled.img`\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  :hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n\r\nconst ImageGalleryItem = ({ webformatURL, user, largeImageURL }) => (\r\n    <GalleryListItem>\r\n        <GalleryImage\r\n            src={webformatURL}\r\n            alt={user}\r\n            data-fullsize={largeImageURL}\r\n        />\r\n    </GalleryListItem>\r\n)\r\n\r\nImageGalleryItem.propTypes = {\r\n  webformatURL: PropTypes.string.isRequired,\r\n  user: PropTypes.string.isRequired,\r\n  largeImageURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nconst Gallery = styled.ul`\r\n  display: grid;\r\n  width: 1200px;\r\n  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\r\n  grid-auto-rows: 260px;\r\n  grid-gap: 12px;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <Gallery onClick={onClick}>\r\n      {images.map(image => \r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          webformatURL={image.webformatURL}\r\n          largeImageURL={image.largeImageURL}\r\n          user={image.user}\r\n        />\r\n      )}\r\n    </Gallery>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import Loader from 'react-loader-spinner';\r\nimport styled from 'styled-components';\r\n\r\nconst LoaderWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nconst LoadingLoader = () => {\r\n  return (\r\n    <LoaderWrapper>\r\n      <Loader type=\"Circles\" color=\"#00BFFF\" height={300} width={300} />;\r\n    </LoaderWrapper>\r\n  );\r\n};\r\n\r\nexport default LoadingLoader;","import PropTypes from 'prop-types';\r\nimport React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport { createPortal } from 'react-dom';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst OverlayWrapper = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nconst ButtonClose = styled.button`\r\n  position: absolute;\r\n  top: 12px;\r\n  right: 28px;\r\n  padding: 0;\r\n  border: none;\r\n  color: #fff;\r\n  background-color: transparent;\r\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  \r\n  :hover {\r\n    color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst ModalWrapper = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    fullSize: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = event => {\r\n    if (event.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.props.onClose();\r\n  };\r\n\r\n  render() {\r\n    const { fullSize, name } = this.props;\r\n    return createPortal(\r\n      <OverlayWrapper onClick={this.handleBackdropClick}>\r\n        <ModalWrapper>\r\n          <img src={fullSize} alt={name} />\r\n        </ModalWrapper>\r\n        <ButtonClose\r\n          type=\"button\"\r\n          onClick={this.handleClick}\r\n        >\r\n          <AiOutlineCloseCircle style={{ width: 36, height: 36 }} />\r\n        </ButtonClose>\r\n      </OverlayWrapper>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst LoadMore = styled.button`\r\n  display: block;\r\n  margin: 0 auto;\r\n  max-width: 140px;\r\n  padding: 8px 16px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: #fff;\r\n  line-height: 1;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  :hover {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <LoadMore type=\"button\" onClick={onClick} >Load More</LoadMore>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;","import axios from 'axios';\r\n\r\nconst KEY = '22657812-5b6312e522363c98c02137a18';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\n\r\nconst fetchImages = async (searchQuery, page) => {\r\n  const response = await axios.get(\r\n    `${BASE_URL}/?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  );\r\n  if (response.status === 200) return response.data.hits;\r\n  throw new Error(response.status);\r\n};\r\n\r\nexport default fetchImages;","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchBar from '../Searchbar/Searchbar';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Loader from '../Loader/Loader';\r\nimport Toastify from '../Toastify/Toastify';\r\nimport Modal from '../Modal/Modal';\r\nimport Button from '../Button/Button';\r\nimport API from '../../data/services';\r\n\r\nconst ImageFinderWrapper = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;\r\n\r\nconst Status = {\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n};\r\n\r\nconst scrollToTheBottom = () => {\r\n  let offsetHeight = document.documentElement.offsetHeight - 965;\r\n  window.scrollTo({\r\n    top: offsetHeight,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nconst scrollToTheTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nconst ToTheTopButton = styled.button`\r\n  position: fixed;\r\n  right: 24px;\r\n  bottom: 24px;\r\n  display: block;\r\n  min-width: 80px;\r\n  max-width: 140px;\r\n  padding: 8px 16px;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  color: #fff;\r\n  line-height: 1;\r\n  border: 0;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  :hover {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n\r\n\r\nclass ImageFinder extends Component {\r\n  state = {\r\n    searchQuery: '',\r\n    images: [],\r\n    status: null,\r\n    showModal: false,\r\n    alt: null,\r\n    fullSize: null,\r\n    page: 1,\r\n  };\r\n\r\n  async componentDidUpdate(prevProps, prevState) {\r\n    const { PENDING, RESOLVED } = Status;\r\n    const { searchQuery, images, page } = this.state;\r\n    if (prevState.searchQuery === searchQuery && prevState.page === page)\r\n      return;\r\n    this.setState({ status: PENDING });\r\n    await API(searchQuery, page)\r\n      .then(responseImages => {\r\n        if (responseImages.length === 0) {\r\n          Toastify(\r\n            'warning',\r\n            'Sorry, there are no images matching your search query. Please try again.',\r\n          );\r\n          this.setState({\r\n            images: [],\r\n          });\r\n        } else if (prevState.searchQuery === searchQuery) {\r\n          this.setState({\r\n            images: [...images, ...responseImages],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            images: responseImages,\r\n          });\r\n        }\r\n        return this.setState({\r\n          status: RESOLVED,\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ status: null });\r\n        Toastify('error', `${error}`);\r\n      });\r\n    if (prevState.searchQuery === searchQuery) scrollToTheBottom();\r\n  }\r\n\r\n  handleFormSubmit = searchQuery => {\r\n    this.setState({ searchQuery, page: 1 });\r\n  };\r\n\r\n  handleClick = event => {\r\n    const { showModal } = this.state;\r\n    if (showModal) {\r\n      this.setState({\r\n        showModal: !showModal,\r\n        alt: null,\r\n        fullSize: null,\r\n      });\r\n    } else {\r\n      if (event.target.nodeName !== 'IMG') return;\r\n      this.setState({\r\n        showModal: !showModal,\r\n        alt: event.target.alt,\r\n        fullSize: event.target.dataset.fullsize,\r\n      });\r\n    }\r\n  };\r\n\r\n  getLoadMore = () => {\r\n    this.setState(prevState => ({\r\n      page: prevState.page + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { images, status, showModal, alt, fullSize } = this.state;\r\n    return (\r\n      <ImageFinderWrapper>\r\n        <SearchBar onSubmit={this.handleFormSubmit} />\r\n        {status === 'pending' && <Loader />}\r\n        {status === 'resolved' && (\r\n          <ImageGallery images={images} onClick={this.handleClick} />\r\n        )}\r\n        {images.length > 11 && status === 'resolved' && (\r\n          <Button onClick={this.getLoadMore} />\r\n        )}\r\n        {images.length > 11 && (\r\n          <ToTheTopButton onClick={scrollToTheTop}>Up</ToTheTopButton>\r\n        )}\r\n        {showModal && (\r\n          <Modal onClose={this.handleClick} fullSize={fullSize} name={alt} />\r\n        )}\r\n      </ImageFinderWrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageFinder;","import './App.css';\nimport styled from 'styled-components';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImageFinder from './Components/ImageFinder/ImageFinder';\n\nconst Container = styled.div`\n  margin: 0 auto;\n  padding: 0 40px;\n  min-width: 1340px;\n`;\n\nfunction App() {\n  return (\n      <>\n        <Container>\n          <ImageFinder />\n        </Container>\n        <ToastContainer />\n      </>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n  ReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}